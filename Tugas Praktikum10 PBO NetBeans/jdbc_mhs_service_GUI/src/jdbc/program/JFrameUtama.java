/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jdbc.program;

import jdbc.model.Mahasiswa;
import jdbc.service.MysqlMahasiswaService;
import javax.swing.DefaultListModel;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Jihan Saniyya
 */
public class JFrameUtama extends javax.swing.JFrame {
    
    private MysqlMahasiswaService service;
    
    // Model untuk JList
    private DefaultListModel<String> listModelID;
    private DefaultListModel<String> listModelNAMA;

    /**
     * Creates new form JFrameUtama
     */
    public JFrameUtama() {

        initComponents();
        
        // Inisialisasi service
        service = new MysqlMahasiswaService();
        
        // Setup list model
        setupListModel();
        
        // Load data awal
        loadDataToList();
    }
    
    private void setupListModel() {
        // Buat model untuk JList ID dan NAMA
        listModelID = new DefaultListModel<>();
        listModelNAMA = new DefaultListModel<>();
        
        // Set model ke JList
        jListID.setModel(listModelID);
        jListNAMA.setModel(listModelNAMA);
        
        // Sinkronisasi selection antara kedua list
        jListID.addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int selectedIndex = jListID.getSelectedIndex();
                if (selectedIndex >= 0) {
                    jListNAMA.setSelectedIndex(selectedIndex);
                    // Set data ke text field untuk edit/hapus
                    setSelectedDataToFields();
                }
            }
        });
        jListNAMA.addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int selectedIndex = jListNAMA.getSelectedIndex();
                if (selectedIndex >= 0) {
                    jListID.setSelectedIndex(selectedIndex);
                    // Set data ke text field untuk edit/hapus
                    setSelectedDataToFields();
                }
            }
        });
    }
    private void setSelectedDataToFields() {
        int selectedIndex = jListID.getSelectedIndex();
        if (selectedIndex >= 0) {
            String id = listModelID.getElementAt(selectedIndex);
            String nama = listModelNAMA.getElementAt(selectedIndex);
            
            // Set ke text field untuk edit dan hapus
            jTextField2.setText(id);  // untuk edit
            jTextField3.setText(id);  // untuk hapus
            jTextField4.setText(nama); // nama untuk edit
            jTextField5.setText(nama); // nama untuk hapus
        }
    }
    
    /**
     * Load data dari database ke JList
     */
    private void loadDataToList() {
        listModelID.clear();
        listModelNAMA.clear();
        
        try {
            List<Mahasiswa> listMahasiswa = service.getAll();
            
            for (Mahasiswa mhs : listMahasiswa) {
                listModelID.addElement(String.valueOf(mhs.getId()));
                listModelNAMA.addElement(mhs.getNama());
            }
            
            System.out.println("✅ Data berhasil dimuat: " + listMahasiswa.size() + " records");
        } catch (Exception e) {
            System.err.println("❌ Error loading data: " + e.getMessage());
            JOptionPane.showMessageDialog(this, 
                "Error saat memuat data: " + e.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jListID = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListNAMA = new javax.swing.JList<>();
        jLabelID = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButtonAmbilSemuaData = new javax.swing.JButton();
        jLabelnama = new javax.swing.JLabel();
        jTextFieldnama = new javax.swing.JTextField();
        jButtonTambahkan = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jButtonEdit = new javax.swing.JButton();
        jButtonHapus = new javax.swing.JButton();
        jButtonResetIndex = new javax.swing.JButton();
        jLabelIndexReset = new javax.swing.JLabel();
        jLabelNAMA = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(jListID);

        jScrollPane2.setViewportView(jListNAMA);

        jLabelID.setText("ID");

        jLabel2.setText("jLabel2");

        jButtonAmbilSemuaData.setText("Ambil Semua Data");
        jButtonAmbilSemuaData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAmbilSemuaDataActionPerformed(evt);
            }
        });

        jLabelnama.setText("nama:");

        jTextFieldnama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldnamaActionPerformed(evt);
            }
        });

        jButtonTambahkan.setText("Tambahkan");
        jButtonTambahkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTambahkanActionPerformed(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jButtonEdit.setText("Edit");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        jButtonHapus.setText("Hapus");
        jButtonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHapusActionPerformed(evt);
            }
        });

        jButtonResetIndex.setText("Reset Indeks");
        jButtonResetIndex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetIndexActionPerformed(evt);
            }
        });

        jLabelIndexReset.setText("Index di reset ke 0");

        jLabelNAMA.setText("NAMA");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelID, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelNAMA, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldnama)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelnama, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jTextField4)
                                                    .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)))
                                            .addComponent(jButtonAmbilSemuaData)
                                            .addComponent(jButtonTambahkan))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButtonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonResetIndex)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabelIndexReset, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelID)
                    .addComponent(jLabel2)
                    .addComponent(jLabelNAMA))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jButtonAmbilSemuaData)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelnama)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldnama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonTambahkan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonEdit))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonHapus))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonResetIndex)
                            .addComponent(jLabelIndexReset)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(225, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
        jButtonEditActionPerformed(evt);
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jButtonAmbilSemuaDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAmbilSemuaDataActionPerformed
        // TODO add your handling code here:
        System.out.println("🔄 Refresh data dari database...");
        loadDataToList();
        JOptionPane.showMessageDialog(this, "✅ Data berhasil dimuat ulang!");
    }//GEN-LAST:event_jButtonAmbilSemuaDataActionPerformed

    private void jButtonTambahkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTambahkanActionPerformed
        // TODO add your handling code here:
        String nama = jTextFieldnama.getText().trim();
        
        if (nama.isEmpty()) {
            JOptionPane.showMessageDialog(this, 
                "⚠️ Nama tidak boleh kosong!", 
                "Warning", 
                JOptionPane.WARNING_MESSAGE);
            jTextFieldnama.requestFocus();
            return;
        }
        
        try {
            Mahasiswa mhs = new Mahasiswa(nama);
            service.add(mhs);
            
            // Refresh data
            loadDataToList();
            
            // Clear input
            jTextFieldnama.setText("");
            
            JOptionPane.showMessageDialog(this, 
                "✅ Data mahasiswa '" + nama + "' berhasil ditambahkan!", 
                "Success", 
                JOptionPane.INFORMATION_MESSAGE);
                
        } catch (Exception e) {
            System.err.println("❌ Error saat tambah data: " + e.getMessage());
            JOptionPane.showMessageDialog(this, 
                "❌ Error saat menambah data: " + e.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonTambahkanActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        //TODO add your handling code here:
        String idText = jTextField2.getText().trim();
        String namaBaru = jTextField4.getText().trim();
        
        if (idText.isEmpty() || namaBaru.isEmpty()) {
            JOptionPane.showMessageDialog(this, 
                "⚠️ ID dan Nama harus diisi!", 
                "Warning", 
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        try {
            int id = Integer.parseInt(idText);
            
            Mahasiswa mhs = service.getById(id);
            if (mhs == null) {
                JOptionPane.showMessageDialog(this, 
                    "❌ Data dengan ID " + id + " tidak ditemukan!", 
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            String namaLama = mhs.getNama();
            mhs.setNama(namaBaru);
            service.update(mhs);
            
            // Refresh data
            loadDataToList();
            
            // Clear inputs
            jTextField2.setText("");
            jTextField4.setText("");
            
            JOptionPane.showMessageDialog(this, 
                "✅ Data berhasil diupdate!\nNama lama: " + namaLama + "\nNama baru: " + namaBaru, 
                "Success", 
                JOptionPane.INFORMATION_MESSAGE);
                
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                "❌ ID harus berupa angka!", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            jTextField2.requestFocus();
        } catch (Exception e) {
            System.err.println("❌ Error saat update: " + e.getMessage());
            JOptionPane.showMessageDialog(this, 
                "❌ Error saat update data: " + e.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jButtonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHapusActionPerformed
        // TODO add your handling code here:
        String idText = jTextField3.getText().trim();
        
        if (idText.isEmpty()) {
            JOptionPane.showMessageDialog(this, 
                "⚠️ ID harus diisi!", 
                "Warning", 
                JOptionPane.WARNING_MESSAGE);
            jTextField3.requestFocus();
            return;
        }
        
        try {
            int id = Integer.parseInt(idText);
            
            // Cek apakah mahasiswa dengan ID tersebut ada
            Mahasiswa mahasiswa = service.getById(id);
            if (mahasiswa == null) {
                JOptionPane.showMessageDialog(this, 
                    "❌ Mahasiswa dengan ID " + id + " tidak ditemukan!", 
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            String nama = mahasiswa.getNama();
            
            int confirm = JOptionPane.showConfirmDialog(this, 
                "⚠️ Apakah Anda yakin ingin menghapus:\nID: " + id + "\nNama: " + nama + "?", 
                "Konfirmasi Hapus", 
                JOptionPane.YES_NO_OPTION);
            
            if (confirm == JOptionPane.YES_OPTION) {
                service.delete(id);
                
                // Refresh data
                loadDataToList();
                
                // Clear inputs
                jTextField3.setText("");
                jTextField5.setText("");
                
                JOptionPane.showMessageDialog(this, 
                    "✅ Data mahasiswa '" + nama + "' berhasil dihapus!", 
                    "Success", 
                    JOptionPane.INFORMATION_MESSAGE);
            }
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, 
                "❌ ID harus berupa angka!", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            jTextField3.requestFocus();
        } catch (Exception e) {
            System.err.println("❌ Error saat hapus: " + e.getMessage());
            JOptionPane.showMessageDialog(this, 
                "❌ Error saat menghapus data: " + e.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonHapusActionPerformed

    private void jButtonResetIndexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetIndexActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, 
            "⚠️ Apakah Anda yakin ingin menghapus SEMUA data mahasiswa dan reset index?", 
            "Konfirmasi Reset", 
            JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                service.deleteAll();
                
                // Refresh data
                loadDataToList();
                
                // Clear all inputs
                jTextFieldnama.setText("");
                jTextField2.setText("");
                jTextField3.setText("");
                jTextField4.setText("");
                jTextField5.setText("");
                
                JOptionPane.showMessageDialog(this, 
                    "✅ Semua data mahasiswa berhasil dihapus dan index direset ke 1!", 
                    "Success", 
                    JOptionPane.INFORMATION_MESSAGE);
                    
            } catch (Exception e) {
                System.err.println("❌ Error saat reset: " + e.getMessage());
                JOptionPane.showMessageDialog(this, 
                    "❌ Error saat reset data: " + e.getMessage(), 
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonResetIndexActionPerformed

    private void jTextFieldnamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldnamaActionPerformed
        // TODO add your handling code here:
         jButtonTambahkanActionPerformed(evt);
    }//GEN-LAST:event_jTextFieldnamaActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
        jTextField4.requestFocus();
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
        jButtonHapusActionPerformed(evt);
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    /**
     * @param args the command line arguments
     */
     // </editor-fold> 
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameUtama().setVisible(true);
            }
        });
    }

        

        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAmbilSemuaData;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonHapus;
    private javax.swing.JButton jButtonResetIndex;
    private javax.swing.JButton jButtonTambahkan;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelID;
    private javax.swing.JLabel jLabelIndexReset;
    private javax.swing.JLabel jLabelNAMA;
    private javax.swing.JLabel jLabelnama;
    private javax.swing.JList<String> jListID;
    private javax.swing.JList<String> jListNAMA;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextFieldnama;
    // End of variables declaration//GEN-END:variables
}

